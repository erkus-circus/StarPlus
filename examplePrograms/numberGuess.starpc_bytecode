0x00
0x00
0x00
0x19 ; 25 Constants:
0x02 ; Integer data type
0x00
0x00
0x00
0x01 ; This constant [INDEX: 0]
0x00
0x00
0x00
0x01 ; Number: 1
0x02 ; Integer data type
0x00
0x00
0x00
0x01 ; This constant [INDEX: 1]
0x00
0x00
0x00
0x00 ; Number: 0
0x01 ; string data type: One Byte per Data block
0x00
0x00
0x00
0x01 ; This constant [INDEX: 2] takes up (1) bytes
0x2d ; Char: '-'
0x02 ; Integer data type
0x00
0x00
0x00
0x01 ; This constant [INDEX: 3]
0x00
0x00
0x00
0x0a ; Number: 10
0x02 ; Integer data type
0x00
0x00
0x00
0x01 ; This constant [INDEX: 4]
0x00
0x00
0x00
0x30 ; Number: 48
0x02 ; Integer data type
0x00
0x00
0x00
0x01 ; This constant [INDEX: 5]
0x00
0x00
0x00
0x02 ; Number: 2
0x01 ; string data type: One Byte per Data block
0x00
0x00
0x00
0x6e ; This constant [INDEX: 6] takes up (110) bytes
0xa ; Char: '\n'
0x20 ; Char: ' '
0x49 ; Char: 'I'
0x2c ; Char: ','
0x20 ; Char: ' '
0x74 ; Char: 't'
0x68 ; Char: 'h'
0x65 ; Char: 'e'
0x20 ; Char: ' '
0x63 ; Char: 'c'
0x6f ; Char: 'o'
0x6d ; Char: 'm'
0x70 ; Char: 'p'
0x75 ; Char: 'u'
0x74 ; Char: 't'
0x65 ; Char: 'e'
0x72 ; Char: 'r'
0x2c ; Char: ','
0x20 ; Char: ' '
0x61 ; Char: 'a'
0x6d ; Char: 'm'
0x20 ; Char: ' '
0x74 ; Char: 't'
0x68 ; Char: 'h'
0x69 ; Char: 'i'
0x6e ; Char: 'n'
0x6b ; Char: 'k'
0x69 ; Char: 'i'
0x6e ; Char: 'n'
0x67 ; Char: 'g'
0x20 ; Char: ' '
0x6f ; Char: 'o'
0x66 ; Char: 'f'
0x20 ; Char: ' '
0x61 ; Char: 'a'
0x20 ; Char: ' '
0x6e ; Char: 'n'
0x75 ; Char: 'u'
0x6d ; Char: 'm'
0x62 ; Char: 'b'
0x65 ; Char: 'e'
0x72 ; Char: 'r'
0x20 ; Char: ' '
0x62 ; Char: 'b'
0x65 ; Char: 'e'
0x74 ; Char: 't'
0x77 ; Char: 'w'
0x65 ; Char: 'e'
0x65 ; Char: 'e'
0x6e ; Char: 'n'
0x20 ; Char: ' '
0x31 ; Char: '1'
0x20 ; Char: ' '
0x61 ; Char: 'a'
0x6e ; Char: 'n'
0x64 ; Char: 'd'
0x20 ; Char: ' '
0x31 ; Char: '1'
0x30 ; Char: '0'
0x2e ; Char: '.'
0xa ; Char: '\n'
0x49 ; Char: 'I'
0x66 ; Char: 'f'
0x20 ; Char: ' '
0x79 ; Char: 'y'
0x6f ; Char: 'o'
0x75 ; Char: 'u'
0x20 ; Char: ' '
0x67 ; Char: 'g'
0x75 ; Char: 'u'
0x65 ; Char: 'e'
0x73 ; Char: 's'
0x73 ; Char: 's'
0x20 ; Char: ' '
0x77 ; Char: 'w'
0x68 ; Char: 'h'
0x61 ; Char: 'a'
0x74 ; Char: 't'
0x20 ; Char: ' '
0x69 ; Char: 'i'
0x74 ; Char: 't'
0x20 ; Char: ' '
0x69 ; Char: 'i'
0x73 ; Char: 's'
0x2c ; Char: ','
0x20 ; Char: ' '
0x79 ; Char: 'y'
0x6f ; Char: 'o'
0x75 ; Char: 'u'
0x20 ; Char: ' '
0x77 ; Char: 'w'
0x69 ; Char: 'i'
0x6e ; Char: 'n'
0x21 ; Char: '!'
0xa ; Char: '\n'
0xa ; Char: '\n'
0x54 ; Char: 'T'
0x61 ; Char: 'a'
0x6b ; Char: 'k'
0x65 ; Char: 'e'
0x20 ; Char: ' '
0x61 ; Char: 'a'
0x20 ; Char: ' '
0x67 ; Char: 'g'
0x75 ; Char: 'u'
0x65 ; Char: 'e'
0x73 ; Char: 's'
0x73 ; Char: 's'
0x3a ; Char: ':'
0x20 ; Char: ' '
0x01 ; string data type: One Byte per Data block
0x00
0x00
0x00
0x0e ; This constant [INDEX: 7] takes up (14) bytes
0xa ; Char: '\n'
0x59 ; Char: 'Y'
0x6f ; Char: 'o'
0x75 ; Char: 'u'
0x20 ; Char: ' '
0x67 ; Char: 'g'
0x75 ; Char: 'u'
0x65 ; Char: 'e'
0x73 ; Char: 's'
0x73 ; Char: 's'
0x65 ; Char: 'e'
0x64 ; Char: 'd'
0x3a ; Char: ':'
0x20 ; Char: ' '
0x01 ; string data type: One Byte per Data block
0x00
0x00
0x00
0x0d ; This constant [INDEX: 8] takes up (13) bytes
0x2e ; Char: '.'
0xa ; Char: '\n'
0x49 ; Char: 'I'
0x20 ; Char: ' '
0x67 ; Char: 'g'
0x75 ; Char: 'u'
0x65 ; Char: 'e'
0x73 ; Char: 's'
0x73 ; Char: 's'
0x65 ; Char: 'e'
0x64 ; Char: 'd'
0x3a ; Char: ':'
0x20 ; Char: ' '
0x01 ; string data type: One Byte per Data block
0x00
0x00
0x00
0x02 ; This constant [INDEX: 9] takes up (2) bytes
0x2e ; Char: '.'
0xa ; Char: '\n'
0x01 ; string data type: One Byte per Data block
0x00
0x00
0x00
0x0e ; This constant [INDEX: 10] takes up (14) bytes
0xa ; Char: '\n'
0xa ; Char: '\n'
0x59 ; Char: 'Y'
0x6f ; Char: 'o'
0x75 ; Char: 'u'
0x20 ; Char: ' '
0x77 ; Char: 'w'
0x6f ; Char: 'o'
0x6e ; Char: 'n'
0x21 ; Char: '!'
0x21 ; Char: '!'
0x21 ; Char: '!'
0xa ; Char: '\n'
0xa ; Char: '\n'
0x01 ; string data type: One Byte per Data block
0x00
0x00
0x00
0x18 ; This constant [INDEX: 11] takes up (24) bytes
0xa ; Char: '\n'
0x42 ; Char: 'B'
0x65 ; Char: 'e'
0x74 ; Char: 't'
0x74 ; Char: 't'
0x65 ; Char: 'e'
0x72 ; Char: 'r'
0x20 ; Char: ' '
0x6c ; Char: 'l'
0x75 ; Char: 'u'
0x63 ; Char: 'c'
0x6b ; Char: 'k'
0x20 ; Char: ' '
0x6e ; Char: 'n'
0x65 ; Char: 'e'
0x78 ; Char: 'x'
0x74 ; Char: 't'
0x20 ; Char: ' '
0x74 ; Char: 't'
0x69 ; Char: 'i'
0x6d ; Char: 'm'
0x65 ; Char: 'e'
0x21 ; Char: '!'
0xa ; Char: '\n'
0x02 ; Integer data type
0x00
0x00
0x00
0x01 ; This constant [INDEX: 12]
0x00
0x00
0x00
0x03 ; Number: 3
0x02 ; Integer data type
0x00
0x00
0x00
0x01 ; This constant [INDEX: 13]
0x00
0x00
0x00
0x04 ; Number: 4
0x02 ; Integer data type
0x00
0x00
0x00
0x01 ; This constant [INDEX: 14]
0x00
0x00
0x00
0x05 ; Number: 5
0x02 ; Integer data type
0x00
0x00
0x00
0x01 ; This constant [INDEX: 15]
0x00
0x00
0x00
0x06 ; Number: 6
0x02 ; Integer data type
0x00
0x00
0x00
0x01 ; This constant [INDEX: 16]
0x00
0x00
0x00
0x07 ; Number: 7
0x02 ; Integer data type
0x00
0x00
0x00
0x01 ; This constant [INDEX: 17]
0x00
0x00
0x00
0x08 ; Number: 8
0x02 ; Integer data type
0x00
0x00
0x00
0x01 ; This constant [INDEX: 18]
0x00
0x00
0x00
0x09 ; Number: 9
0x02 ; Integer data type
0x00
0x00
0x00
0x01 ; This constant [INDEX: 19]
0x00
0x00
0x00
0x0b ; Number: 11
0x02 ; Integer data type
0x00
0x00
0x00
0x01 ; This constant [INDEX: 20]
0x00
0x00
0x00
0x11 ; Number: 17
0x02 ; Integer data type
0x00
0x00
0x00
0x01 ; This constant [INDEX: 21]
0x00
0x00
0x00
0x15 ; Number: 21
0x02 ; Integer data type
0x00
0x00
0x00
0x01 ; This constant [INDEX: 22]
0x00
0x00
0x00
0x0e ; Number: 14
0x02 ; Integer data type
0x00
0x00
0x00
0x01 ; This constant [INDEX: 23]
0x00
0x00
0x00
0x25 ; Number: 37
0x02 ; Integer data type
0x00
0x00
0x00
0x01 ; This constant [INDEX: 24]
0x00
0x00
0x00
0x1c ; Number: 28
0x00
0x00
0x00
0x06 ; Number of functions.

; FUNCTION HEADER, Index: 0 
0x00
0x00 ; 0 parameters.
0x00
0x00
0x00
0x2c ; Number of instructions
CONST_BYTE                                                                                                                                 ; PC: 0
0x06 ; \n I, the computer, am thinking of a number between 1 and 10.\nIf you guess what it is, you win!\n\nTake a guess: , Index: 6        ; PC: 1
OUT                                                                                                                                        ; PC: 2
RANDINT                                                                                                                                    ; PC: 3
CONST_3 ; 10, Index: 3                                                                                                                     ; PC: 4
IMOD ; Modulo                                                                                                                              ; PC: 5
CONST_0 ; 1, Index: 0                                                                                                                      ; PC: 6
IADD ; Add                                                                                                                                 ; PC: 7
STORE_0                                                                                                                                    ; PC: 8
IN                                                                                                                                         ; PC: 9
STORE_1                                                                                                                                    ; PC: 10
CONST_BYTE                                                                                                                                 ; PC: 11
0x07 ; \nYou guessed: , Index: 7                                                                                                           ; PC: 12
OUT                                                                                                                                        ; PC: 13
LOAD_1 ; Variable Index: 1                                                                                                                 ; PC: 14
OUT                                                                                                                                        ; PC: 15
CONST_BYTE                                                                                                                                 ; PC: 16
0x08 ; .\nI guessed: , Index: 8                                                                                                            ; PC: 17
OUT                                                                                                                                        ; PC: 18
LOAD_0 ; Variable Index: 0                                                                                                                 ; PC: 19
INTTOSTR                                                                                                                                   ; PC: 20
OUT                                                                                                                                        ; PC: 21
CONST_BYTE                                                                                                                                 ; PC: 22
0x09 ; .\n, Index: 9                                                                                                                       ; PC: 23
OUT                                                                                                                                        ; PC: 24
LOAD_0 ; Variable Index: 0                                                                                                                 ; PC: 25
LOAD_1 ; Variable Index: 1                                                                                                                 ; PC: 26
CONST_BYTE                                                                                                                                 ; PC: 27
0x0e ; stringToInt, Function Index: 5                                                                                                      ; PC: 28
CALL                                                                                                                                       ; PC: 29
IEQ ; Equal To                                                                                                                             ; PC: 30
CONST_BYTE                                                                                                                                 ; PC: 31
0x0e                                                                                                                                       ; PC: 32
COMPARE                                                                                                                                    ; PC: 33
CONST_BYTE                                                                                                                                 ; PC: 34
0x0a ; \n\nYou won!!!\n\n, Index: 10                                                                                                       ; PC: 35
OUT                                                                                                                                        ; PC: 36
CONST_1 ; 0, Index: 1                                                                                                                      ; PC: 37
RET                                                                                                                                        ; PC: 38
CONST_BYTE                                                                                                                                 ; PC: 39
0x0b ; \nBetter luck next time!\n, Index: 11                                                                                               ; PC: 40
OUT                                                                                                                                        ; PC: 41
CONST_1 ; 0, Index: 1                                                                                                                      ; PC: 42
RET                                                                                                                                        ; PC: 43



; FUNCTION HEADER, Index: 1 
0x00
0x02 ; 2 parameters.
0x00
0x00
0x00
0x09 ; Number of instructions
LOAD_0 ; Variable Index: 0        ; PC: 0
LOAD_1 ; Variable Index: 1        ; PC: 1
ILT ; Less Than                   ; PC: 2
CONST_5                           ; PC: 3
COMPARE                           ; PC: 4
LOAD_0 ; Variable Index: 0        ; PC: 5
RET                               ; PC: 6
LOAD_1 ; Variable Index: 1        ; PC: 7
RET                               ; PC: 8



; FUNCTION HEADER, Index: 2 
0x00
0x02 ; 2 parameters.
0x00
0x00
0x00
0x09 ; Number of instructions
LOAD_0 ; Variable Index: 0        ; PC: 0
LOAD_1 ; Variable Index: 1        ; PC: 1
IGT ; Greater Than                ; PC: 2
CONST_5                           ; PC: 3
COMPARE                           ; PC: 4
LOAD_0 ; Variable Index: 0        ; PC: 5
RET                               ; PC: 6
LOAD_1 ; Variable Index: 1        ; PC: 7
RET                               ; PC: 8



; FUNCTION HEADER, Index: 3 
0x00
0x02 ; 2 parameters.
0x00
0x00
0x00
0x25 ; Number of instructions
CONST_0 ; 1, Index: 0             ; PC: 0
STORE_2                           ; PC: 1
CONST_1 ; 0, Index: 1             ; PC: 2
STORE_3                           ; PC: 3
LOAD_1 ; Variable Index: 1        ; PC: 4
CONST_1 ; 0, Index: 1             ; PC: 5
IEQ ; Equal To                    ; PC: 6
CONST_5                           ; PC: 7
COMPARE                           ; PC: 8
CONST_0 ; 1, Index: 0             ; PC: 9
RET                               ; PC: 10
LOAD_1 ; Variable Index: 1        ; PC: 11
CONST_0 ; 1, Index: 0             ; PC: 12
IEQ ; Equal To                    ; PC: 13
CONST_5                           ; PC: 14
COMPARE                           ; PC: 15
LOAD_0 ; Variable Index: 0        ; PC: 16
RET                               ; PC: 17
LOAD_3 ; Variable Index: 3        ; PC: 18
LOAD_1 ; Variable Index: 1        ; PC: 19
IGT ; Greater Than                ; PC: 20
CONST_BYTE                        ; PC: 21
0x13 ; 11                         ; PC: 22
COMPARE                           ; PC: 23
LOAD_2 ; Variable Index: 2        ; PC: 24
LOAD_0 ; Variable Index: 0        ; PC: 25
IMUL ; Multiply                   ; PC: 26
STORE_2                           ; PC: 27
LOAD_3 ; Variable Index: 3        ; PC: 28
CONST_0 ; 1, Index: 0             ; PC: 29
IADD ; Add                        ; PC: 30
STORE_3                           ; PC: 31
CONST_BYTE                        ; PC: 32
0x14 ; 17                         ; PC: 33
MVU                               ; PC: 34
LOAD_2 ; Variable Index: 2        ; PC: 35
RET                               ; PC: 36



; FUNCTION HEADER, Index: 4 
0x00
0x02 ; 2 parameters.
0x00
0x00
0x00
0x22 ; Number of instructions
LOAD_0 ; Variable Index: 0        ; PC: 0
DATASIZE                          ; PC: 1
LOAD_1 ; Variable Index: 1        ; PC: 2
DATASIZE                          ; PC: 3
INEQ ; Not Equal To               ; PC: 4
CONST_5                           ; PC: 5
COMPARE                           ; PC: 6
CONST_1 ; 0, Index: 1             ; PC: 7
RET                               ; PC: 8
CONST_1 ; 0, Index: 1             ; PC: 9
STORE_2                           ; PC: 10
LOAD_2 ; Variable Index: 2        ; PC: 11
LOAD_0 ; Variable Index: 0        ; PC: 12
DATASIZE                          ; PC: 13
IGT ; Greater Than                ; PC: 14
CONST_BYTE                        ; PC: 15
0x16 ; 14                         ; PC: 16
COMPARE                           ; PC: 17
LOAD_0 ; Variable Index: 0        ; PC: 18
LOAD_2 ; Variable Index: 2        ; PC: 19
DATAGET                           ; PC: 20
LOAD_1 ; Variable Index: 1        ; PC: 21
LOAD_2 ; Variable Index: 2        ; PC: 22
DATAGET                           ; PC: 23
INEQ ; Not Equal To               ; PC: 24
CONST_5                           ; PC: 25
COMPARE                           ; PC: 26
CONST_1 ; 0, Index: 1             ; PC: 27
RET                               ; PC: 28
CONST_BYTE                        ; PC: 29
0x15 ; 21                         ; PC: 30
MVU                               ; PC: 31
CONST_0 ; 1, Index: 0             ; PC: 32
RET                               ; PC: 33



; FUNCTION HEADER, Index: 5 
0x00
0x01 ; 1 parameters.
0x00
0x00
0x00
0x42 ; Number of instructions
CONST_1 ; 0, Index: 1                  ; PC: 0
STORE_1                                ; PC: 1
CONST_1 ; 0, Index: 1                  ; PC: 2
STORE_2                                ; PC: 3
LOAD_0 ; Variable Index: 0             ; PC: 4
CONST_1 ; 0, Index: 1                  ; PC: 5
DATAGET                                ; PC: 6
CONST_2 ; -, Index: 2                  ; PC: 7
IEQ ; Equal To                         ; PC: 8
CONST_5                                ; PC: 9
COMPARE                                ; PC: 10
CONST_0 ; 1, Index: 0                  ; PC: 11
STORE_1                                ; PC: 12
LOAD_1 ; Variable Index: 1             ; PC: 13
LOAD_0 ; Variable Index: 0             ; PC: 14
DATASIZE                               ; PC: 15
CONST_0 ; 1, Index: 0                  ; PC: 16
ISUB ; Subtract                        ; PC: 17
IGTE ; Greater Than or Equal To        ; PC: 18
CONST_BYTE                             ; PC: 19
0x18 ; 28                              ; PC: 20
COMPARE                                ; PC: 21
CONST_3 ; 10, Index: 3                 ; PC: 22
LOAD_0 ; Variable Index: 0             ; PC: 23
DATASIZE                               ; PC: 24
CONST_0 ; 1, Index: 0                  ; PC: 25
ISUB ; Subtract                        ; PC: 26
LOAD_1 ; Variable Index: 1             ; PC: 27
ISUB ; Subtract                        ; PC: 28
CONST_BYTE                             ; PC: 29
0x0c ; pow, Function Index: 3          ; PC: 30
CALL                                   ; PC: 31
LOAD_0 ; Variable Index: 0             ; PC: 32
LOAD_1 ; Variable Index: 1             ; PC: 33
DATAGET                                ; PC: 34
CONST_4 ; 48, Index: 4                 ; PC: 35
ISUB ; Subtract                        ; PC: 36
IMUL ; Multiply                        ; PC: 37
STORE_3                                ; PC: 38
LOAD_2 ; Variable Index: 2             ; PC: 39
LOAD_3 ; Variable Index: 3             ; PC: 40
IADD ; Add                             ; PC: 41
STORE_2                                ; PC: 42
LOAD_1 ; Variable Index: 1             ; PC: 43
CONST_0 ; 1, Index: 0                  ; PC: 44
IADD ; Add                             ; PC: 45
STORE_1                                ; PC: 46
CONST_BYTE                             ; PC: 47
0x17 ; 37                              ; PC: 48
MVU                                    ; PC: 49
LOAD_0 ; Variable Index: 0             ; PC: 50
CONST_1 ; 0, Index: 1                  ; PC: 51
DATAGET                                ; PC: 52
CONST_2 ; -, Index: 2                  ; PC: 53
IEQ ; Equal To                         ; PC: 54
CONST_BYTE                             ; PC: 55
0x0f                                   ; PC: 56
COMPARE                                ; PC: 57
LOAD_2 ; Variable Index: 2             ; PC: 58
LOAD_2 ; Variable Index: 2             ; PC: 59
CONST_5 ; 2, Index: 5                  ; PC: 60
IMUL ; Multiply                        ; PC: 61
ISUB ; Subtract                        ; PC: 62
STORE_2                                ; PC: 63
LOAD_2 ; Variable Index: 2             ; PC: 64
RET                                    ; PC: 65
